------------------------------------------------------------
-- Q.A : BILL TABLE, SAMPLE DATA, AND TRIGGER
-- Bill(BillNo,BillDate,BillAmount,Discount,NetPayment)
-- Trigger will calculate Discount & NetPayment automatically.
-- Rules:
--   BillAmount < 1000   → Discount = 5%
--   1000 < BillAmount < 10000 → Discount = 10%
--   BillAmount > 10000  → Discount = 20%
-- Users enter BillNo, BillDate & BillAmount.
------------------------------------------------------------
CREATE TABLE BILL (
    BILLNO       NUMBER(10) PRIMARY KEY,
    BILLDATE     DATE,
    BILLAMOUNT   NUMBER(10,2),
    DISCOUNT     NUMBER(5,2),
    NETPAYMENT   NUMBER(10,2)
);

INSERT ALL
    INTO BILL VALUES (1,  DATE '2025-08-10',  500,    NULL, NULL)
    INTO BILL VALUES (2,  DATE '2025-08-12',  750,    NULL, NULL)
    INTO BILL VALUES (3,  DATE '2025-08-15',  980,    NULL, NULL)
    INTO BILL VALUES (4,  DATE '2025-08-18', 1200,    NULL, NULL)
    INTO BILL VALUES (5,  DATE '2025-08-20', 2500,    NULL, NULL)
    INTO BILL VALUES (6,  DATE '2025-08-22', 3500,    NULL, NULL)
    INTO BILL VALUES (7,  DATE '2025-08-25', 4200,    NULL, NULL)
    INTO BILL VALUES (8,  DATE '2025-08-28', 5000,    NULL, NULL)
    INTO BILL VALUES (9,  DATE '2025-08-30', 6200,    NULL, NULL)
    INTO BILL VALUES (10, DATE '2025-09-01', 7500,    NULL, NULL)
    INTO BILL VALUES (11, DATE '2025-09-03', 8800,    NULL, NULL)
    INTO BILL VALUES (12, DATE '2025-09-05', 9900,    NULL, NULL)
    INTO BILL VALUES (13, DATE '2025-09-08', 11000,   NULL, NULL)
    INTO BILL VALUES (14, DATE '2025-09-10', 12500,   NULL, NULL)
    INTO BILL VALUES (15, DATE '2025-09-12', 14000,   NULL, NULL)
    INTO BILL VALUES (16, DATE '2025-09-14', 15000,   NULL, NULL)
SELECT * FROM DUAL;

CREATE OR REPLACE TRIGGER COUNTBILL
BEFORE INSERT OR UPDATE ON BILL
FOR EACH ROW
BEGIN
    IF :NEW.BILLAMOUNT <= 1000 THEN
        :NEW.DISCOUNT := 5;
    ELSIF :NEW.BILLAMOUNT > 1000 AND :NEW.BILLAMOUNT <= 10000 THEN
        :NEW.DISCOUNT := 10;
    ELSIF :NEW.BILLAMOUNT > 10000 THEN
        :NEW.DISCOUNT := 20;
    ELSE
        :NEW.DISCOUNT := 0;
    END IF;

    :NEW.NETPAYMENT := :NEW.BILLAMOUNT - (:NEW.BILLAMOUNT * (:NEW.DISCOUNT / 100));
END;

------------------------------------------------------------
-- Q.B : VEHICLE TAX CATEGORY & REGISTRATION TABLES
-- VehicleTaxCategoryMaster(VehicleCategoryID,VehicleCategoryName,VehicleCategoryTaxRate)
-- RegistrationMaster(RegistrationID, RegistrationDate, OwnerName,
--                    VehicleCategoryID, VehicleBasicCost, VehicleTaxAmount, VehicleTotalCost)
-- Trigger will calculate VehicleTaxAmount & VehicleTotalCost.
------------------------------------------------------------
CREATE TABLE VEHICLETAXCATEGORYMASTER (
    VEHICLECATEGORYID       INT PRIMARY KEY,
    VEHICLECATEGORYNAME     VARCHAR2(50),
    VEHICLECATEGORYTAXRATE  NUMBER(5,2)
);

CREATE TABLE REGISTRATIONMASTER (
    REGISTRATIONID      INT PRIMARY KEY,
    REGISTRATIONDATE    DATE,
    OWNERNAME           VARCHAR2(20),
    VEHICLECATEGORYID   INT,
    VEHICLEBASICCOST    NUMBER(10,2),
    VEHICLETAXAMOUNT    NUMBER(9,2),
    VEHICLETOTALCOST    NUMBER(11,2),
    FOREIGN KEY (VEHICLECATEGORYID) REFERENCES VEHICLETAXCATEGORYMASTER(VEHICLECATEGORYID)
);

INSERT ALL
    INTO VEHICLETAXCATEGORYMASTER VALUES (1,'CYCLE',      5.7)
    INTO VEHICLETAXCATEGORYMASTER VALUES (2,'BIKE',       13)
    INTO VEHICLETAXCATEGORYMASTER VALUES (3,'MOPHET',     10.3)
    INTO VEHICLETAXCATEGORYMASTER VALUES (4,'CAR',        35.9)
    INTO VEHICLETAXCATEGORYMASTER VALUES (5,'HELICOPTER', 3.5)
SELECT * FROM DUAL;

INSERT ALL
    INTO REGISTRATIONMASTER VALUES (1,  DATE '2025-08-02', 'AMAN',        2,  85000.50,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (2,  DATE '2025-08-03', 'REEMA',       4, 1200000.75, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (3,  DATE '2025-08-04', 'VIKRAM',      3,  45000.25,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (4,  DATE '2025-08-05', 'ANITA',       5, 5000000.60, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (5,  DATE '2025-08-06', 'DEEPAK',      1,   5000.90,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (6,  DATE '2025-08-07', 'SUNITA',      2,  95000.10,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (7,  DATE '2025-08-08', 'HARISH',      4, 1800000.45, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (8,  DATE '2025-08-09', 'MANISHA',     3,  38000.80,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (9,  DATE '2025-08-10', 'SACHIN',      5, 4200000.35, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (10, DATE '2025-08-11', 'PREETI',      1,   3200.50,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (11, DATE '2025-08-12', 'NAVEEN',      2,  78000.40,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (12, DATE '2025-08-13', 'KIRAN',       4, 1500000.85, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (13, DATE '2025-08-14', 'SANJAY',      3,  52000.60,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (14, DATE '2025-08-15', 'POONAM',      5, 4600000.55, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (15, DATE '2025-08-16', 'RAHUL VERMA', 1,   4500.75,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (16, DATE '2025-08-17', 'MEGHA',       2,  91000.95,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (17, DATE '2025-08-18', 'DEVESH',      4, 2100000.30, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (18, DATE '2025-08-19', 'SHRUTI',      3,  60000.20,  NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (19, DATE '2025-08-20', 'ARUN',        5, 5500000.90, NULL, NULL)
    INTO REGISTRATIONMASTER VALUES (20, DATE '2025-08-21', 'SARITA',      1,   3800.25,  NULL, NULL)
SELECT * FROM DUAL;

CREATE OR REPLACE TRIGGER INSERTINCALAMOUT
BEFORE INSERT OR UPDATE ON REGISTRATIONMASTER
FOR EACH ROW
DECLARE 
    VTAX VEHICLETAXCATEGORYMASTER.VEHICLECATEGORYTAXRATE%TYPE;
BEGIN
    SELECT VEHICLECATEGORYTAXRATE
    INTO VTAX
    FROM VEHICLETAXCATEGORYMASTER
    WHERE VEHICLECATEGORYID = :NEW.VEHICLECATEGORYID;

    :NEW.VEHICLETAXAMOUNT := (:NEW.VEHICLEBASICCOST * VTAX) / 100;
    :NEW.VEHICLETOTALCOST := :NEW.VEHICLEBASICCOST + :NEW.VEHICLETAXAMOUNT;
END;

------------------------------------------------------------
-- Q.C : EMPLOYEE, PROJECT, EMP_PROJECT TABLES & CASCADE DELETE
-- Requirement: If an employee is deleted, all related rows in
-- EMP_PROJECT must be deleted automatically.
------------------------------------------------------------
CREATE TABLE EMPLOYEE (
    EMPID INT PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    MOBILE VARCHAR2(10),
    DESIGNATION VARCHAR2(15),
    DOJ DATE
);

CREATE TABLE PROJECT (
    PID INT PRIMARY KEY,
    TITLE VARCHAR2(20) UNIQUE,
    SUB VARCHAR2(20)
);

CREATE TABLE EMP_PROJECT (
    EMPID    INT,
    PID      INT,
    DURATION INT NOT NULL CHECK (DURATION > 0),
    FOREIGN KEY (EMPID) REFERENCES EMPLOYEE(EMPID),
    FOREIGN KEY (PID)   REFERENCES PROJECT(PID),
    PRIMARY KEY (EMPID, PID)
);

INSERT ALL
    INTO EMPLOYEE VALUES (1, 'ARJUN',    '9876543210', 'MANAGER',   DATE '2022-01-12')
    INTO EMPLOYEE VALUES (2, 'MEGHA',    '9123456780', 'DEVELOPER', DATE '2023-03-05')
    INTO EMPLOYEE VALUES (3, 'SANJAY',   '9012345678', 'TESTER',    DATE '2021-06-18')
    INTO EMPLOYEE VALUES (4, 'KIRTI',    '8899776655', 'ANALYST',   DATE '2020-09-25')
    INTO EMPLOYEE VALUES (5, 'DEEPAK',   '9988776655', 'TEAM LEAD', DATE '2019-12-10')
    INTO EMPLOYEE VALUES (6, 'PRIYANKA', '9090909090', 'HR',        DATE '2024-05-30')
    INTO EMPLOYEE VALUES (7, 'AMOL',     '8800554433', 'DEVELOPER', DATE '2025-02-14')
SELECT * FROM DUAL;

INSERT ALL
    INTO PROJECT VALUES (101, 'ERP SYSTEM',   'SOFTWARE')
    INTO PROJECT VALUES (102, 'MOBILE APP',   'ANDROID')
    INTO PROJECT VALUES (103, 'DATA ANALYSIS','PYTHON')
    INTO PROJECT VALUES (104, 'WEBSITE DEV',  'HTML')
    INTO PROJECT VALUES (105, 'AI CHATBOT',   'ML')
    INTO PROJECT VALUES (106, 'BANKING SYS',  'JAVA')
    INTO PROJECT VALUES (107, 'E-COMMERCE',   'PHP')
SELECT * FROM DUAL;

INSERT ALL
    INTO EMP_PROJECT VALUES (1, 101, 6)
    INTO EMP_PROJECT VALUES (1, 103, 4)
    INTO EMP_PROJECT VALUES (2, 102, 8)
    INTO EMP_PROJECT VALUES (2, 104, 5)
    INTO EMP_PROJECT VALUES (2, 107, 7)
    INTO EMP_PROJECT VALUES (3, 101, 3)
    INTO EMP_PROJECT VALUES (3, 105, 6)
    INTO EMP_PROJECT VALUES (4, 103, 4)
    INTO EMP_PROJECT VALUES (4, 106, 9)
    INTO EMP_PROJECT VALUES (5, 102, 5)
    INTO EMP_PROJECT VALUES (5, 105, 7)
    INTO EMP_PROJECT VALUES (6, 104, 6)
    INTO EMP_PROJECT VALUES (6, 107, 8)
    INTO EMP_PROJECT VALUES (7, 101, 5)
    INTO EMP_PROJECT VALUES (7, 106, 4)
SELECT * FROM DUAL;

CREATE OR REPLACE TRIGGER DELETEEMP
BEFORE DELETE ON EMPLOYEE
FOR EACH ROW
BEGIN
    DELETE FROM EMP_PROJECT
    WHERE EMPID = :OLD.EMPID;
END;

